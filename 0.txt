-------------------Качественные свойства алгоритмов и программ :
-Детерминированность и понятность
-Дискретность
-Конечность
-Результативность
-Правильность

Количественные свойства:
-Быстродействие
-Ресурсоёмкость
-Эффективность работы с кодом
-Точность

*Мантисы и обработка данных - изучить


Общие советы:
1)большие и маленькие буквы различаются (регистр важен)
2)пользователь объявляет и использует идентификаторы, состояище из букв, _ и цифр
3)все ключевые слова языка пишутся маленькими буквами
4)все имена классов (типов даных) пишутся с Большой буквы
5)Имена переменных и функций (мктодов) пишутся с маленькой буквы
6)Когда нужно в идентификаторе испольовать несколько слов, рекомендуется применять CamelCase, например:

класс				BladeRunner			Blade_runner
метод				runOnTheEdge		run_on_the_edge
переменная (объект)	CurrentRunner		current_runner


Задача: найти максимум из трёх чисел записанных в переменные x,y,z.
Решение: Сравнить переменные между собой (предварительно задав переменную max), в конце выдав результат на экран
По-человечески: сравнить между собой два предмета. Взяв больший предмет, сравнить его с оставшимся третьим.

Малоэффективный способ записи задачи:

Если (x >= y И x >= z), то max = x
Если (y >= x И y >= z), то max = y
Если (z >= x И z >= y), то max = z

Способ эффективнее:

Если x >= y
То
	Если x >= z
	То
		max = x

	Иначе
		max = z
Иначе
	Если y >= z
	То
		max = y
	Иначе
		max = z

Ещё лучше (if с возможностью зацикливания):

max = x
Если max < y,
То max = y
Если max < z,
То max = z
Если max < x,
То max = x

----------------------Операторы java:

0) Пустой оператор
 ;
1) Выполнение выражения
	<выражение>;
	z = x - y;
2) Составной оператор
    { <оператор1> <оператор2> }
	
	{
	  int x = 12;
	  x = x-9;
	  System.out.printl(x);
	}
	
3) Оператор ветвление
    if ( <условное выражение> )
	    <оператор1>
	else
	    <оператор2>
		
	if(x > 10)
		System.out.printl("Много");
	else
		System.out.printl("Мало");

4) Цикл пока
	 while (<условное выражение>)
	  <оператор>
5)Цикл "до"
do {
<операторы>
} while(<условное выражение>);


Пример простого цикла на 10 кряков:

int n = 10;
int i = 0;
While(i <= n){
System.out.println("кря-кря-кря");
i++; //увеличивается на единицу за каждый луп
}

Ещё один:
int n = 10;
for (int j = 0; j < n; j++) {	//Переменная j существует только в рамках данного цикла
	System.out.println("бе-бе-бе");
 }
 
^ Они абсолютно идентичны с точки зрения механики


x += y;    // То же самое, что и x = x + y;
x -= y;    // То же самое, что и x = x - y;
x *= y;    // То же самое, что и x = x * y;
x /= y;    // То же самое, что и x = x / y;
x %= y;    // То же самое, что и x = x % y;

https://stepik.org/lesson/469568/step/5?auth=login&unit=460394